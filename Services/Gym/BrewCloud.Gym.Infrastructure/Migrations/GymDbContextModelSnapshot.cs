// <auto-generated />
using System;
using BrewCloud.Gym.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BrewCloud.Gym.Infrastructure.Migrations
{
    [DbContext(typeof(GymDbContext))]
    partial class GymDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BrewCloud.Gym.Domain.Entities.GymLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("createdate");

                    b.Property<string>("CreateUsers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("createusers");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit")
                        .HasColumnName("deleted");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleteddate");

                    b.Property<string>("DeletedUsers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("deletedusers");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fieldname");

                    b.Property<string>("MasterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("masterid");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("newvalue");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oldvalue");

                    b.Property<int>("RecId")
                        .HasColumnType("int")
                        .HasColumnName("recid");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tablename");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("tenantid");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("updatedate");

                    b.Property<string>("UpdateUsers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updateusers");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("GymLogs_pkey");

                    b.ToTable("gymlogs", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
